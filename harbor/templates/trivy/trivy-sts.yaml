{{- if .Values.trivy.enabled }}
{{- $trivy := .Values.persistence.persistentVolumeClaim.trivy }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "harbor.trivy" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
{{ include "harbor.labels" . | indent 4 }}
    component: trivy
    app.kubernetes.io/component: trivy
spec:
  replicas: {{ .Values.trivy.replicas }}
  serviceName: {{ template "harbor.trivy" . }}
  selector:
    matchLabels:
{{ include "harbor.matchLabels" . | indent 6 }}
      component: trivy
  template:
    metadata:
      labels:
{{ include "harbor.labels" . | indent 8 }}
        component: trivy
        app.kubernetes.io/component: trivy
    spec:
{{- with .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml . | indent 8 }}
{{- end }}
{{- if .Values.trivy.serviceAccountName }}
      serviceAccountName: {{ .Values.trivy.serviceAccountName }}
{{- end }}
      securityContext:
        fsGroup: 10000
        runAsNonRoot: true  # Explicitly enforce non-root at pod level
        seccompProfile:
          type: RuntimeDefault
      automountServiceAccountToken: {{ .Values.trivy.automountServiceAccountToken | default false }}

      initContainers:
        - name: fix-perms
          image: alpine:3.14
          securityContext:
            runAsUser: 10000  # Must match main container
            runAsGroup: 10000
            allowPrivilegeEscalation: false
          command: ["sh", "-c", "mkdir -p /home/scanner/.cache && chown -R 10000:10000 /home/scanner && chmod -R 755 /home/scanner"]
          volumeMounts:
            - name: data
              mountPath: /home/scanner
      containers:
        - name: trivy
          image: {{ .Values.trivy.image.repository }}:{{ .Values.trivy.image.tag }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          securityContext:
            runAsUser: 10000
            runAsGroup: 10000
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
          command: ["sh", "-c", "/home/scanner/entrypoint.sh"]
          env:
            - name: HOME
              value: /home/scanner
            - name: SCANNER_LOG_LEVEL
              value: {{ .Values.logLevel | quote }}
            # ... [keep all other existing env variables] ...
          ports:
            - name: api-server
              containerPort: {{ template "harbor.trivy.containerPort" . }}
          volumeMounts:
            - name: data
              mountPath: /home/scanner
{{- if .Values.internalTLS.enabled }}
            - name: trivy-internal-certs
              mountPath: /etc/harbor/ssl/trivy
{{- end }}
          livenessProbe:
            httpGet:
              path: /probe/healthy
              port: api-server
              scheme: {{ include "harbor.component.scheme" . | upper }}
            initialDelaySeconds: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /probe/ready
              port: api-server
              scheme: {{ include "harbor.component.scheme" . | upper }}
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
{{ toYaml .Values.trivy.resources | indent 12 }}

      volumes:
{{- if .Values.internalTLS.enabled }}
        - name: trivy-internal-certs
          secret:
            secretName: {{ template "harbor.internalTLS.trivy.secretName" . }}
{{- end }}
{{- if not .Values.persistence.enabled }}
        - name: "data"
          emptyDir: {}
{{- else if $trivy.existingClaim }}
        - name: "data"
          persistentVolumeClaim:
            claimName: {{ $trivy.existingClaim }}
{{- end }}
{{- with .Values.trivy.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
{{- end }}
{{- if and .Values.persistence.enabled (not $trivy.existingClaim) }}
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
{{ include "harbor.legacy.labels" . | indent 10 }}
      spec:
        accessModes: [{{ $trivy.accessMode | quote }}]
{{- if $trivy.storageClass }}
        storageClassName: "{{ $trivy.storageClass }}"
{{- end }}
        resources:
          requests:
            storage: {{ $trivy.size | quote }}
{{- end }}
{{- end }}
